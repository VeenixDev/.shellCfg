#!/usr/bin/env zsh

### COLORS ###
COLOR_DECO='{white}'
COLOR_GIT='{magenta}'
COLOR_NODE='{green}'
COLOR_DOCKER='{cyan}'
COLOR_USER='{cyan}'
COLOR_PATH='{cyan}'
COLOR_FAIL='{red}'
COLOR_SUCCESS='{green}'

### TEXT DECORATION ###
TEXT_BOLD_START='%B'
TEXT_BOLD_END='%b'

### HELPERS ###
function get_git_branch() {
    echo -n $(git branch --show-current 2> /dev/null)
}

function get_node_version() {
    echo -n $(node -v 2> /dev/null)
}

function get_docker_version() {
    local dockerVersion=( $(docker -v) )

    echo -n ${dockerVersion[3]}
}

function get_docker_compose_version() {
    local dockerComposeVersion=( $(docker-compose -v) )

    echo -n ${dockerComposeVersion[4]}
}

function get_info_bar() {
    local returnStr=()

    local isGit=$(git rev-parse --inside-tree $(pwd) 2> /dev/null)
    local isNodeProject=$(search-up package.json 2> /dev/null)
    local hasDockerFile=$(search-up Dockerfile 2> /dev/null)
    local hasDockerCompose=$(search-up docker-compose.yaml 2> /dev/null)

    if [[ $isGit != '' ]] then
        returnStr+=$TEXT_BOLD_START'%F'$COLOR_GIT'git='$TEXT_BOLD_END$(get_git_branch)
    fi

    if [[ $isNodeProject != '' ]] then
        if [[ $ENFORCE_NODE_VERSION = true ]] then
            nvm use 2> /dev/null
        fi

        returnStr+=$TEXT_BOLD_START'%F'$COLOR_NODE'node='$TEXT_BOLD_END$(get_node_version)
    fi

    if [[ $hasDockerFile != '' ]] then
        returnStr+=$TEXT_BOLD_START'%F'$COLOR_DOCKER'docker='$TEXT_BOLD_END$(get_docker_version)
    fi

    if [[ $hasDockerCompose != '' ]] then
        returnStr+=$TEXT_BOLD_START'%F'$COLOR_DOCKER'docker-compose='$TEXT_BOLD_END$(get_docker_compose_version)
    fi

    if [[ $returnStr = '' ]] then
        echo -n '%F{yellow} - '
        return
    fi

    echo -n ${(j: :)returnStr}
}

function get_right_info() {
    local returnStr=()
    local lastStatus=$?
    if [[ $lastStatus = "0" ]] then
        returnStr+='%F'$COLOR_SUCCESS'%K'$COLOR_SUCCESS'%f✓ '$lastStatus
    else
        returnStr+='%F'$COLOR_FAIL'%K'$COLOR_FAIL'%f✗ '$lastStatus
    fi

    echo -n ${(j: :)returnStr}'%k%f'
}

### PROMPT ###
returnVal="$?"
setopt PROMPT_SUBST
RPROMPT='$(get_right_info $returnVal)'
PROMPT='%F$COLOR_DECO╭─(%F$COLOR_USER%n%F$COLOR_DECO) [%F$COLOR_PATH%2~%F$COLOR_DECO] ($(get_info_bar)%F$COLOR_DECO)
╰─%#%f '
#RPROMPT='$(get_right_info $returnVal)'
